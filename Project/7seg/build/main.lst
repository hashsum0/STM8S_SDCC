                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.5 #9426 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _delay
                                     13 	.globl _out7seg
                                     14 	.globl _GPIO_init
                                     15 	.globl _clk_init
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area DATA
                                     20 ;--------------------------------------------------------
                                     21 ; ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area INITIALIZED
                                     24 ;--------------------------------------------------------
                                     25 ; Stack segment in internal ram 
                                     26 ;--------------------------------------------------------
                                     27 	.area	SSEG
      000000                         28 __start__stack:
      000000                         29 	.ds	1
                                     30 
                                     31 ;--------------------------------------------------------
                                     32 ; absolute external ram data
                                     33 ;--------------------------------------------------------
                                     34 	.area DABS (ABS)
                                     35 ;--------------------------------------------------------
                                     36 ; interrupt vector 
                                     37 ;--------------------------------------------------------
                                     38 	.area HOME
      000000                         39 __interrupt_vect:
      000000 82v00u00u00             40 	int s_GSINIT ;reset
      000004 82 00 00 00             41 	int 0x0000 ;trap
      000008 82 00 00 00             42 	int 0x0000 ;int0
      00000C 82 00 00 00             43 	int 0x0000 ;int1
      000010 82 00 00 00             44 	int 0x0000 ;int2
      000014 82 00 00 00             45 	int 0x0000 ;int3
      000018 82 00 00 00             46 	int 0x0000 ;int4
      00001C 82 00 00 00             47 	int 0x0000 ;int5
      000020 82 00 00 00             48 	int 0x0000 ;int6
      000024 82 00 00 00             49 	int 0x0000 ;int7
      000028 82 00 00 00             50 	int 0x0000 ;int8
      00002C 82 00 00 00             51 	int 0x0000 ;int9
      000030 82 00 00 00             52 	int 0x0000 ;int10
      000034 82 00 00 00             53 	int 0x0000 ;int11
      000038 82 00 00 00             54 	int 0x0000 ;int12
      00003C 82 00 00 00             55 	int 0x0000 ;int13
      000040 82 00 00 00             56 	int 0x0000 ;int14
      000044 82 00 00 00             57 	int 0x0000 ;int15
      000048 82 00 00 00             58 	int 0x0000 ;int16
      00004C 82 00 00 00             59 	int 0x0000 ;int17
      000050 82 00 00 00             60 	int 0x0000 ;int18
      000054 82 00 00 00             61 	int 0x0000 ;int19
      000058 82 00 00 00             62 	int 0x0000 ;int20
      00005C 82 00 00 00             63 	int 0x0000 ;int21
      000060 82 00 00 00             64 	int 0x0000 ;int22
      000064 82 00 00 00             65 	int 0x0000 ;int23
      000068 82 00 00 00             66 	int 0x0000 ;int24
      00006C 82 00 00 00             67 	int 0x0000 ;int25
      000070 82 00 00 00             68 	int 0x0000 ;int26
      000074 82 00 00 00             69 	int 0x0000 ;int27
      000078 82 00 00 00             70 	int 0x0000 ;int28
      00007C 82 00 00 00             71 	int 0x0000 ;int29
                                     72 ;--------------------------------------------------------
                                     73 ; global & static initialisations
                                     74 ;--------------------------------------------------------
                                     75 	.area HOME
                                     76 	.area GSINIT
                                     77 	.area GSFINAL
                                     78 	.area GSINIT
      000000                         79 __sdcc_gs_init_startup:
      000000                         80 __sdcc_init_data:
                                     81 ; stm8_genXINIT() start
      000000 AEr00r00         [ 2]   82 	ldw x, #l_DATA
      000003 27 07            [ 1]   83 	jreq	00002$
      000005                         84 00001$:
      000005 72 4FuFFuFF      [ 1]   85 	clr (s_DATA - 1, x)
      000009 5A               [ 2]   86 	decw x
      00000A 26 F9            [ 1]   87 	jrne	00001$
      00000C                         88 00002$:
      00000C AEr00r00         [ 2]   89 	ldw	x, #l_INITIALIZER
      00000F 27 09            [ 1]   90 	jreq	00004$
      000011                         91 00003$:
      000011 D6uFFuFF         [ 1]   92 	ld	a, (s_INITIALIZER - 1, x)
      000014 D7uFFuFF         [ 1]   93 	ld	(s_INITIALIZED - 1, x), a
      000017 5A               [ 2]   94 	decw	x
      000018 26 F7            [ 1]   95 	jrne	00003$
      00001A                         96 00004$:
                                     97 ; stm8_genXINIT() end
                                     98 	.area GSFINAL
      000000 CCr00r80         [ 2]   99 	jp	__sdcc_program_startup
                                    100 ;--------------------------------------------------------
                                    101 ; Home
                                    102 ;--------------------------------------------------------
                                    103 	.area HOME
                                    104 	.area HOME
      000080                        105 __sdcc_program_startup:
      000080 CCr01r79         [ 2]  106 	jp	_main
                                    107 ;	return from main will return to caller
                                    108 ;--------------------------------------------------------
                                    109 ; code
                                    110 ;--------------------------------------------------------
                                    111 	.area CODE
                                    112 ;	inc/clk_init.h: 7: void clk_init(void){    
                                    113 ;	-----------------------------------------
                                    114 ;	 function clk_init
                                    115 ;	-----------------------------------------
      000000                        116 _clk_init:
                                    117 ;	inc/clk_init.h: 8: CLK_ECKR|=CLK_ECKR_HSEEN;            
      000000 72 10 50 C1      [ 1]  118 	bset	0x50c1, #0
                                    119 ;	inc/clk_init.h: 9: CLK_SWCR|=CLK_SWCR_SWEN;               
      000004 AE 50 C5         [ 2]  120 	ldw	x, #0x50c5
      000007 F6               [ 1]  121 	ld	a, (x)
      000008 AA 02            [ 1]  122 	or	a, #0x02
      00000A F7               [ 1]  123 	ld	(x), a
                                    124 ;	inc/clk_init.h: 10: while((CLK_ECKR & CLK_ECKR_HSERDY) == 0) {} 
      00000B                        125 00101$:
      00000B AE 50 C1         [ 2]  126 	ldw	x, #0x50c1
      00000E F6               [ 1]  127 	ld	a, (x)
      00000F A5 02            [ 1]  128 	bcp	a, #0x02
      000011 27 F8            [ 1]  129 	jreq	00101$
                                    130 ;	inc/clk_init.h: 11: CLK_CKDIVR = 0;                    
      000013 35 00 50 C6      [ 1]  131 	mov	0x50c6+0, #0x00
                                    132 ;	inc/clk_init.h: 12: CLK_SWR = 0xB4;                    
      000017 35 B4 50 C4      [ 1]  133 	mov	0x50c4+0, #0xb4
                                    134 ;	inc/clk_init.h: 13: while ((CLK_SWCR & CLK_SWCR_SWIF) == 0){}
      00001B                        135 00104$:
      00001B AE 50 C5         [ 2]  136 	ldw	x, #0x50c5
      00001E F6               [ 1]  137 	ld	a, (x)
      00001F A5 08            [ 1]  138 	bcp	a, #0x08
      000021 27 F8            [ 1]  139 	jreq	00104$
                                    140 ;	inc/clk_init.h: 14: CLK_CSSR|=CLK_CSSR_CSSEN;
      000023 72 10 50 C8      [ 1]  141 	bset	0x50c8, #0
      000027 81               [ 4]  142 	ret
                                    143 ;	inc/gpio_init.h: 10: void GPIO_init(void)
                                    144 ;	-----------------------------------------
                                    145 ;	 function GPIO_init
                                    146 ;	-----------------------------------------
      000028                        147 _GPIO_init:
                                    148 ;	inc/gpio_init.h: 17: PB_DDR = 0x00;                                                        //_______0__________________0________________1_____________bez podtiyzhki,c prerbIvaniem 
      000028 35 00 50 07      [ 1]  149 	mov	0x5007+0, #0x00
                                    150 ;	inc/gpio_init.h: 18: PB_CR1 = 0xff;                                                       //_______0__________________1________________1_____________c podtiyzhki,c prerbIvanii
      00002C 35 FF 50 08      [ 1]  151 	mov	0x5008+0, #0xff
                                    152 ;	inc/gpio_init.h: 19: PB_CR2 = 0xff;                                                      //_______PORT_OUT
      000030 35 FF 50 09      [ 1]  153 	mov	0x5009+0, #0xff
                                    154 ;	inc/gpio_init.h: 21: PC_DDR = 0xff;                                                        //_______1__________________0________________0_____________otkritiy stok
      000034 35 FF 50 0C      [ 1]  155 	mov	0x500c+0, #0xff
                                    156 ;	inc/gpio_init.h: 22: PC_CR1 = 0xFF;                                                       //_______1__________________1________________0_____________dvuhtakthiy vihod
      000038 35 FF 50 0D      [ 1]  157 	mov	0x500d+0, #0xff
                                    158 ;	inc/gpio_init.h: 23: PC_CR2 = 0x00;                                                      //_______1__________________X________________1_____________skorost' do 10MHz
      00003C 35 00 50 0E      [ 1]  159 	mov	0x500e+0, #0x00
                                    160 ;	inc/gpio_init.h: 25: PD_DDR = 0xFF;   
      000040 35 FF 50 11      [ 1]  161 	mov	0x5011+0, #0xff
                                    162 ;	inc/gpio_init.h: 26: PD_CR1 = 0xFF;  
      000044 35 FF 50 12      [ 1]  163 	mov	0x5012+0, #0xff
                                    164 ;	inc/gpio_init.h: 27: PD_CR2 = 0x00; 
      000048 35 00 50 13      [ 1]  165 	mov	0x5013+0, #0x00
      00004C 81               [ 4]  166 	ret
                                    167 ;	inc/7sig.h: 23: void out7seg(volatile int t,volatile int q)
                                    168 ;	-----------------------------------------
                                    169 ;	 function out7seg
                                    170 ;	-----------------------------------------
      00004D                        171 _out7seg:
      00004D 52 19            [ 2]  172 	sub	sp, #25
                                    173 ;	inc/7sig.h: 27: unsigned int x[10]={num0, num1, num2, num3, num4, num5, num6, num7, num8, num9};
      00004F 96               [ 1]  174 	ldw	x, sp
      000050 5C               [ 2]  175 	incw	x
      000051 1F 18            [ 2]  176 	ldw	(0x18, sp), x
      000053 1E 18            [ 2]  177 	ldw	x, (0x18, sp)
      000055 90 AE 00 BE      [ 2]  178 	ldw	y, #0x00be
      000059 FF               [ 2]  179 	ldw	(x), y
      00005A 1E 18            [ 2]  180 	ldw	x, (0x18, sp)
      00005C 5C               [ 2]  181 	incw	x
      00005D 5C               [ 2]  182 	incw	x
      00005E 90 AE 00 0C      [ 2]  183 	ldw	y, #0x000c
      000062 FF               [ 2]  184 	ldw	(x), y
      000063 1E 18            [ 2]  185 	ldw	x, (0x18, sp)
      000065 90 AE 00 76      [ 2]  186 	ldw	y, #0x0076
      000069 EF 04            [ 2]  187 	ldw	(0x0004, x), y
      00006B 1E 18            [ 2]  188 	ldw	x, (0x18, sp)
      00006D 90 AE 00 6E      [ 2]  189 	ldw	y, #0x006e
      000071 EF 06            [ 2]  190 	ldw	(0x0006, x), y
      000073 1E 18            [ 2]  191 	ldw	x, (0x18, sp)
      000075 90 AE 00 CC      [ 2]  192 	ldw	y, #0x00cc
      000079 EF 08            [ 2]  193 	ldw	(0x0008, x), y
      00007B 1E 18            [ 2]  194 	ldw	x, (0x18, sp)
      00007D 90 AE 00 EA      [ 2]  195 	ldw	y, #0x00ea
      000081 EF 0A            [ 2]  196 	ldw	(0x000a, x), y
      000083 1E 18            [ 2]  197 	ldw	x, (0x18, sp)
      000085 90 AE 00 FA      [ 2]  198 	ldw	y, #0x00fa
      000089 EF 0C            [ 2]  199 	ldw	(0x000c, x), y
      00008B 1E 18            [ 2]  200 	ldw	x, (0x18, sp)
      00008D 90 AE 00 0E      [ 2]  201 	ldw	y, #0x000e
      000091 EF 0E            [ 2]  202 	ldw	(0x000e, x), y
      000093 1E 18            [ 2]  203 	ldw	x, (0x18, sp)
      000095 90 AE 00 FE      [ 2]  204 	ldw	y, #0x00fe
      000099 EF 10            [ 2]  205 	ldw	(0x0010, x), y
      00009B 1E 18            [ 2]  206 	ldw	x, (0x18, sp)
      00009D 90 AE 00 EE      [ 2]  207 	ldw	y, #0x00ee
      0000A1 EF 12            [ 2]  208 	ldw	(0x0012, x), y
                                    209 ;	inc/7sig.h: 33: SEGPORT=0xff;
      0000A3 35 FF 50 0A      [ 1]  210 	mov	0x500a+0, #0xff
                                    211 ;	inc/7sig.h: 34: NSEGPORT|=(1<<3)|(1<<1)|(1<<2);
      0000A7 AE 50 0F         [ 2]  212 	ldw	x, #0x500f
      0000AA F6               [ 1]  213 	ld	a, (x)
      0000AB AA 0E            [ 1]  214 	or	a, #0x0e
      0000AD F7               [ 1]  215 	ld	(x), a
                                    216 ;	inc/7sig.h: 35: nseg(q);
      0000AE 1E 1E            [ 2]  217 	ldw	x, (0x1e, sp)
      0000B0 26 07            [ 1]  218 	jrne	00102$
      0000B2 AE 50 0F         [ 2]  219 	ldw	x, #0x500f
      0000B5 F6               [ 1]  220 	ld	a, (x)
      0000B6 A4 F7            [ 1]  221 	and	a, #0xf7
      0000B8 F7               [ 1]  222 	ld	(x), a
      0000B9                        223 00102$:
      0000B9 1E 1E            [ 2]  224 	ldw	x, (0x1e, sp)
      0000BB A3 00 01         [ 2]  225 	cpw	x, #0x0001
      0000BE 26 07            [ 1]  226 	jrne	00104$
      0000C0 AE 50 0F         [ 2]  227 	ldw	x, #0x500f
      0000C3 F6               [ 1]  228 	ld	a, (x)
      0000C4 A4 FD            [ 1]  229 	and	a, #0xfd
      0000C6 F7               [ 1]  230 	ld	(x), a
      0000C7                        231 00104$:
      0000C7 1E 1E            [ 2]  232 	ldw	x, (0x1e, sp)
      0000C9 A3 00 02         [ 2]  233 	cpw	x, #0x0002
      0000CC 26 07            [ 1]  234 	jrne	00106$
      0000CE AE 50 0F         [ 2]  235 	ldw	x, #0x500f
      0000D1 F6               [ 1]  236 	ld	a, (x)
      0000D2 A4 FB            [ 1]  237 	and	a, #0xfb
      0000D4 F7               [ 1]  238 	ld	(x), a
      0000D5                        239 00106$:
                                    240 ;	inc/7sig.h: 36: if(q==0) SEGPORT&=~(x[t%1000/100]);
      0000D5 1E 1E            [ 2]  241 	ldw	x, (0x1e, sp)
      0000D7 26 29            [ 1]  242 	jrne	00108$
      0000D9 AE 50 0A         [ 2]  243 	ldw	x, #0x500a
      0000DC F6               [ 1]  244 	ld	a, (x)
      0000DD 6B 17            [ 1]  245 	ld	(0x17, sp), a
      0000DF 4B E8            [ 1]  246 	push	#0xe8
      0000E1 4B 03            [ 1]  247 	push	#0x03
      0000E3 1E 1E            [ 2]  248 	ldw	x, (0x1e, sp)
      0000E5 89               [ 2]  249 	pushw	x
      0000E6 CDr00r00         [ 4]  250 	call	__modsint
      0000E9 5B 04            [ 2]  251 	addw	sp, #4
      0000EB 4B 64            [ 1]  252 	push	#0x64
      0000ED 4B 00            [ 1]  253 	push	#0x00
      0000EF 89               [ 2]  254 	pushw	x
      0000F0 CDr00r00         [ 4]  255 	call	__divsint
      0000F3 5B 04            [ 2]  256 	addw	sp, #4
      0000F5 58               [ 2]  257 	sllw	x
      0000F6 72 FB 18         [ 2]  258 	addw	x, (0x18, sp)
      0000F9 FE               [ 2]  259 	ldw	x, (x)
      0000FA 9F               [ 1]  260 	ld	a, xl
      0000FB 43               [ 1]  261 	cpl	a
      0000FC 14 17            [ 1]  262 	and	a, (0x17, sp)
      0000FE AE 50 0A         [ 2]  263 	ldw	x, #0x500a
      000101 F7               [ 1]  264 	ld	(x), a
      000102                        265 00108$:
                                    266 ;	inc/7sig.h: 37: if(q==1) SEGPORT&=~(x[t%100/10]);
      000102 1E 1E            [ 2]  267 	ldw	x, (0x1e, sp)
      000104 A3 00 01         [ 2]  268 	cpw	x, #0x0001
      000107 26 29            [ 1]  269 	jrne	00110$
      000109 AE 50 0A         [ 2]  270 	ldw	x, #0x500a
      00010C F6               [ 1]  271 	ld	a, (x)
      00010D 6B 16            [ 1]  272 	ld	(0x16, sp), a
      00010F 4B 64            [ 1]  273 	push	#0x64
      000111 4B 00            [ 1]  274 	push	#0x00
      000113 1E 1E            [ 2]  275 	ldw	x, (0x1e, sp)
      000115 89               [ 2]  276 	pushw	x
      000116 CDr00r00         [ 4]  277 	call	__modsint
      000119 5B 04            [ 2]  278 	addw	sp, #4
      00011B 4B 0A            [ 1]  279 	push	#0x0a
      00011D 4B 00            [ 1]  280 	push	#0x00
      00011F 89               [ 2]  281 	pushw	x
      000120 CDr00r00         [ 4]  282 	call	__divsint
      000123 5B 04            [ 2]  283 	addw	sp, #4
      000125 58               [ 2]  284 	sllw	x
      000126 72 FB 18         [ 2]  285 	addw	x, (0x18, sp)
      000129 FE               [ 2]  286 	ldw	x, (x)
      00012A 9F               [ 1]  287 	ld	a, xl
      00012B 43               [ 1]  288 	cpl	a
      00012C 14 16            [ 1]  289 	and	a, (0x16, sp)
      00012E AE 50 0A         [ 2]  290 	ldw	x, #0x500a
      000131 F7               [ 1]  291 	ld	(x), a
      000132                        292 00110$:
                                    293 ;	inc/7sig.h: 38: if(q==2) SEGPORT&=~(x[t%10]);
      000132 1E 1E            [ 2]  294 	ldw	x, (0x1e, sp)
      000134 A3 00 02         [ 2]  295 	cpw	x, #0x0002
      000137 26 1F            [ 1]  296 	jrne	00113$
      000139 AE 50 0A         [ 2]  297 	ldw	x, #0x500a
      00013C F6               [ 1]  298 	ld	a, (x)
      00013D 6B 15            [ 1]  299 	ld	(0x15, sp), a
      00013F 4B 0A            [ 1]  300 	push	#0x0a
      000141 4B 00            [ 1]  301 	push	#0x00
      000143 1E 1E            [ 2]  302 	ldw	x, (0x1e, sp)
      000145 89               [ 2]  303 	pushw	x
      000146 CDr00r00         [ 4]  304 	call	__modsint
      000149 5B 04            [ 2]  305 	addw	sp, #4
      00014B 58               [ 2]  306 	sllw	x
      00014C 72 FB 18         [ 2]  307 	addw	x, (0x18, sp)
      00014F FE               [ 2]  308 	ldw	x, (x)
      000150 9F               [ 1]  309 	ld	a, xl
      000151 43               [ 1]  310 	cpl	a
      000152 14 15            [ 1]  311 	and	a, (0x15, sp)
      000154 AE 50 0A         [ 2]  312 	ldw	x, #0x500a
      000157 F7               [ 1]  313 	ld	(x), a
      000158                        314 00113$:
      000158 5B 19            [ 2]  315 	addw	sp, #25
      00015A 81               [ 4]  316 	ret
                                    317 ;	main.c: 46: void delay(int t)
                                    318 ;	-----------------------------------------
                                    319 ;	 function delay
                                    320 ;	-----------------------------------------
      00015B                        321 _delay:
      00015B 52 02            [ 2]  322 	sub	sp, #2
                                    323 ;	main.c: 49: for(i=0;i<t;i++)
      00015D 90 5F            [ 1]  324 	clrw	y
      00015F                        325 00107$:
      00015F 51               [ 1]  326 	exgw	x, y
      000160 13 05            [ 2]  327 	cpw	x, (0x05, sp)
      000162 51               [ 1]  328 	exgw	x, y
      000163 2E 11            [ 1]  329 	jrsge	00109$
                                    330 ;	main.c: 51: for(s=0;s<1512;s++)
      000165 AE 05 E8         [ 2]  331 	ldw	x, #0x05e8
      000168 1F 01            [ 2]  332 	ldw	(0x01, sp), x
      00016A                        333 00105$:
      00016A 1E 01            [ 2]  334 	ldw	x, (0x01, sp)
      00016C 5A               [ 2]  335 	decw	x
      00016D 1F 01            [ 2]  336 	ldw	(0x01, sp), x
      00016F 5D               [ 2]  337 	tnzw	x
      000170 26 F8            [ 1]  338 	jrne	00105$
                                    339 ;	main.c: 49: for(i=0;i<t;i++)
      000172 90 5C            [ 2]  340 	incw	y
      000174 20 E9            [ 2]  341 	jra	00107$
      000176                        342 00109$:
      000176 5B 02            [ 2]  343 	addw	sp, #2
      000178 81               [ 4]  344 	ret
                                    345 ;	main.c: 59: void main(void)
                                    346 ;	-----------------------------------------
                                    347 ;	 function main
                                    348 ;	-----------------------------------------
      000179                        349 _main:
      000179 52 46            [ 2]  350 	sub	sp, #70
                                    351 ;	main.c: 61: int f=0,d=0,w=0,q=0,fl1=0,fl2=0,fl3=0,fl4=0,fl5=0,fl6=0,fl7=0;
      00017B 5F               [ 1]  352 	clrw	x
      00017C 1F 11            [ 2]  353 	ldw	(0x11, sp), x
      00017E 5F               [ 1]  354 	clrw	x
      00017F 1F 13            [ 2]  355 	ldw	(0x13, sp), x
      000181 5F               [ 1]  356 	clrw	x
      000182 1F 0F            [ 2]  357 	ldw	(0x0f, sp), x
      000184 5F               [ 1]  358 	clrw	x
      000185 1F 0D            [ 2]  359 	ldw	(0x0d, sp), x
      000187 5F               [ 1]  360 	clrw	x
      000188 1F 0B            [ 2]  361 	ldw	(0x0b, sp), x
      00018A 5F               [ 1]  362 	clrw	x
      00018B 1F 1F            [ 2]  363 	ldw	(0x1f, sp), x
      00018D 5F               [ 1]  364 	clrw	x
      00018E 1F 1D            [ 2]  365 	ldw	(0x1d, sp), x
      000190 5F               [ 1]  366 	clrw	x
      000191 1F 1B            [ 2]  367 	ldw	(0x1b, sp), x
      000193 5F               [ 1]  368 	clrw	x
      000194 1F 19            [ 2]  369 	ldw	(0x19, sp), x
                                    370 ;	main.c: 62: unsigned int os[3]={0,0,0};
      000196 96               [ 1]  371 	ldw	x, sp
      000197 1C 00 05         [ 2]  372 	addw	x, #5
      00019A 1F 25            [ 2]  373 	ldw	(0x25, sp), x
      00019C 1E 25            [ 2]  374 	ldw	x, (0x25, sp)
      00019E 6F 01            [ 1]  375 	clr	(0x1, x)
      0001A0 7F               [ 1]  376 	clr	(x)
      0001A1 1E 25            [ 2]  377 	ldw	x, (0x25, sp)
      0001A3 5C               [ 2]  378 	incw	x
      0001A4 5C               [ 2]  379 	incw	x
      0001A5 6F 01            [ 1]  380 	clr	(0x1, x)
      0001A7 7F               [ 1]  381 	clr	(x)
      0001A8 1E 25            [ 2]  382 	ldw	x, (0x25, sp)
      0001AA 1C 00 04         [ 2]  383 	addw	x, #0x0004
      0001AD 6F 01            [ 1]  384 	clr	(0x1, x)
      0001AF 7F               [ 1]  385 	clr	(x)
                                    386 ;	main.c: 63: long b=0;
      0001B0 5F               [ 1]  387 	clrw	x
      0001B1 1F 03            [ 2]  388 	ldw	(0x03, sp), x
      0001B3 1F 01            [ 2]  389 	ldw	(0x01, sp), x
                                    390 ;	main.c: 64: clk_init();
      0001B5 CDr00r00         [ 4]  391 	call	_clk_init
                                    392 ;	main.c: 66: GPIO_init();
      0001B8 CDr00r28         [ 4]  393 	call	_GPIO_init
                                    394 ;	main.c: 70: d=0;
      0001BB 5F               [ 1]  395 	clrw	x
      0001BC 1F 17            [ 2]  396 	ldw	(0x17, sp), x
                                    397 ;	main.c: 73: while(1)
      0001BE                        398 00163$:
                                    399 ;	main.c: 77: if((b&(1<<5))!=0&&fl1==0)
      0001BE 7B 04            [ 1]  400 	ld	a, (0x04, sp)
      0001C0 A4 20            [ 1]  401 	and	a, #0x20
      0001C2 6B 2A            [ 1]  402 	ld	(0x2a, sp), a
      0001C4 5F               [ 1]  403 	clrw	x
      0001C5 1F 28            [ 2]  404 	ldw	(0x28, sp), x
      0001C7 0F 27            [ 1]  405 	clr	(0x27, sp)
      0001C9 1E 29            [ 2]  406 	ldw	x, (0x29, sp)
      0001CB 26 04            [ 1]  407 	jrne	00315$
      0001CD 1E 27            [ 2]  408 	ldw	x, (0x27, sp)
      0001CF 27 47            [ 1]  409 	jreq	00113$
      0001D1                        410 00315$:
      0001D1 1E 0F            [ 2]  411 	ldw	x, (0x0f, sp)
      0001D3 26 43            [ 1]  412 	jrne	00113$
                                    413 ;	main.c: 79: w=(PB_IDR&((1<<0)|(1<<1)));
      0001D5 AE 50 06         [ 2]  414 	ldw	x, #0x5006
      0001D8 F6               [ 1]  415 	ld	a, (x)
      0001D9 A4 03            [ 1]  416 	and	a, #0x03
      0001DB 5F               [ 1]  417 	clrw	x
      0001DC 97               [ 1]  418 	ld	xl, a
      0001DD 1F 15            [ 2]  419 	ldw	(0x15, sp), x
                                    420 ;	main.c: 80: if(w==0&&q==2&&f<998) f=f+1;
      0001DF 1E 15            [ 2]  421 	ldw	x, (0x15, sp)
      0001E1 26 13            [ 1]  422 	jrne	00102$
      0001E3 1E 13            [ 2]  423 	ldw	x, (0x13, sp)
      0001E5 A3 00 02         [ 2]  424 	cpw	x, #0x0002
      0001E8 26 0C            [ 1]  425 	jrne	00102$
      0001EA 1E 11            [ 2]  426 	ldw	x, (0x11, sp)
      0001EC A3 03 E6         [ 2]  427 	cpw	x, #0x03e6
      0001EF 2E 05            [ 1]  428 	jrsge	00102$
      0001F1 1E 11            [ 2]  429 	ldw	x, (0x11, sp)
      0001F3 5C               [ 2]  430 	incw	x
      0001F4 1F 11            [ 2]  431 	ldw	(0x11, sp), x
      0001F6                        432 00102$:
                                    433 ;	main.c: 81: if(w==0&&q==1&&f>0) f=f-1;
      0001F6 1E 15            [ 2]  434 	ldw	x, (0x15, sp)
      0001F8 26 13            [ 1]  435 	jrne	00106$
      0001FA 1E 13            [ 2]  436 	ldw	x, (0x13, sp)
      0001FC A3 00 01         [ 2]  437 	cpw	x, #0x0001
      0001FF 26 0C            [ 1]  438 	jrne	00106$
      000201 1E 11            [ 2]  439 	ldw	x, (0x11, sp)
      000203 A3 00 00         [ 2]  440 	cpw	x, #0x0000
      000206 2D 05            [ 1]  441 	jrsle	00106$
      000208 1E 11            [ 2]  442 	ldw	x, (0x11, sp)
      00020A 5A               [ 2]  443 	decw	x
      00020B 1F 11            [ 2]  444 	ldw	(0x11, sp), x
      00020D                        445 00106$:
                                    446 ;	main.c: 82: q=w;
      00020D 16 15            [ 2]  447 	ldw	y, (0x15, sp)
      00020F 17 13            [ 2]  448 	ldw	(0x13, sp), y
                                    449 ;	main.c: 84: fl1=1;
      000211 AE 00 01         [ 2]  450 	ldw	x, #0x0001
      000214 1F 0F            [ 2]  451 	ldw	(0x0f, sp), x
      000216 20 12            [ 2]  452 	jra	00114$
      000218                        453 00113$:
                                    454 ;	main.c: 86: else if((b&(1<<5))==0&&fl1==1)fl1=0;
      000218 1E 29            [ 2]  455 	ldw	x, (0x29, sp)
      00021A 26 0E            [ 1]  456 	jrne	00114$
      00021C 1E 27            [ 2]  457 	ldw	x, (0x27, sp)
      00021E 26 0A            [ 1]  458 	jrne	00114$
      000220 1E 0F            [ 2]  459 	ldw	x, (0x0f, sp)
      000222 A3 00 01         [ 2]  460 	cpw	x, #0x0001
      000225 26 03            [ 1]  461 	jrne	00114$
      000227 5F               [ 1]  462 	clrw	x
      000228 1F 0F            [ 2]  463 	ldw	(0x0f, sp), x
      00022A                        464 00114$:
                                    465 ;	main.c: 88: if((b&(1<<6))!=0&&fl2==0)
      00022A 7B 04            [ 1]  466 	ld	a, (0x04, sp)
      00022C A4 40            [ 1]  467 	and	a, #0x40
      00022E 6B 32            [ 1]  468 	ld	(0x32, sp), a
      000230 5F               [ 1]  469 	clrw	x
      000231 1F 30            [ 2]  470 	ldw	(0x30, sp), x
      000233 0F 2F            [ 1]  471 	clr	(0x2f, sp)
      000235 1E 31            [ 2]  472 	ldw	x, (0x31, sp)
      000237 26 04            [ 1]  473 	jrne	00332$
      000239 1E 2F            [ 2]  474 	ldw	x, (0x2f, sp)
      00023B 27 26            [ 1]  475 	jreq	00122$
      00023D                        476 00332$:
      00023D 1E 0D            [ 2]  477 	ldw	x, (0x0d, sp)
      00023F 26 22            [ 1]  478 	jrne	00122$
                                    479 ;	main.c: 90: out7seg(f,d);
      000241 1E 17            [ 2]  480 	ldw	x, (0x17, sp)
      000243 89               [ 2]  481 	pushw	x
      000244 1E 13            [ 2]  482 	ldw	x, (0x13, sp)
      000246 89               [ 2]  483 	pushw	x
      000247 CDr00r4D         [ 4]  484 	call	_out7seg
      00024A 5B 04            [ 2]  485 	addw	sp, #4
                                    486 ;	main.c: 91: if((d++)>2)d=0;
      00024C 16 17            [ 2]  487 	ldw	y, (0x17, sp)
      00024E 1E 17            [ 2]  488 	ldw	x, (0x17, sp)
      000250 5C               [ 2]  489 	incw	x
      000251 1F 17            [ 2]  490 	ldw	(0x17, sp), x
      000253 90 A3 00 02      [ 2]  491 	cpw	y, #0x0002
      000257 2D 03            [ 1]  492 	jrsle	00117$
      000259 5F               [ 1]  493 	clrw	x
      00025A 1F 17            [ 2]  494 	ldw	(0x17, sp), x
      00025C                        495 00117$:
                                    496 ;	main.c: 92: fl2=1;
      00025C AE 00 01         [ 2]  497 	ldw	x, #0x0001
      00025F 1F 0D            [ 2]  498 	ldw	(0x0d, sp), x
      000261 20 12            [ 2]  499 	jra	00123$
      000263                        500 00122$:
                                    501 ;	main.c: 94: else if((b&(1<<6))==0&&fl2==1)fl2=0;
      000263 1E 31            [ 2]  502 	ldw	x, (0x31, sp)
      000265 26 0E            [ 1]  503 	jrne	00123$
      000267 1E 2F            [ 2]  504 	ldw	x, (0x2f, sp)
      000269 26 0A            [ 1]  505 	jrne	00123$
      00026B 1E 0D            [ 2]  506 	ldw	x, (0x0d, sp)
      00026D A3 00 01         [ 2]  507 	cpw	x, #0x0001
      000270 26 03            [ 1]  508 	jrne	00123$
      000272 5F               [ 1]  509 	clrw	x
      000273 1F 0D            [ 2]  510 	ldw	(0x0d, sp), x
      000275                        511 00123$:
                                    512 ;	main.c: 96: if((b&((1<<13)|(1<<14)|(1<<15)))!=0&&fl3==0)PD_ODR^=(1<<0),fl3=1;
      000275 0F 2E            [ 1]  513 	clr	(0x2e, sp)
      000277 7B 03            [ 1]  514 	ld	a, (0x03, sp)
      000279 A4 E0            [ 1]  515 	and	a, #0xe0
      00027B 6B 2D            [ 1]  516 	ld	(0x2d, sp), a
      00027D 16 01            [ 2]  517 	ldw	y, (0x01, sp)
      00027F 17 2B            [ 2]  518 	ldw	(0x2b, sp), y
      000281 1E 2D            [ 2]  519 	ldw	x, (0x2d, sp)
      000283 26 04            [ 1]  520 	jrne	00340$
      000285 1E 2B            [ 2]  521 	ldw	x, (0x2b, sp)
      000287 27 0F            [ 1]  522 	jreq	00129$
      000289                        523 00340$:
      000289 1E 0B            [ 2]  524 	ldw	x, (0x0b, sp)
      00028B 26 0B            [ 1]  525 	jrne	00129$
      00028D 90 10 50 0F      [ 1]  526 	bcpl	0x500f, #0
      000291 AE 00 01         [ 2]  527 	ldw	x, #0x0001
      000294 1F 0B            [ 2]  528 	ldw	(0x0b, sp), x
      000296 20 12            [ 2]  529 	jra	00130$
      000298                        530 00129$:
                                    531 ;	main.c: 97: else if((b&((1<<13)|(1<<14)|(1<<15)))==0&&fl3==1)fl3=0;
      000298 1E 2D            [ 2]  532 	ldw	x, (0x2d, sp)
      00029A 26 0E            [ 1]  533 	jrne	00130$
      00029C 1E 2B            [ 2]  534 	ldw	x, (0x2b, sp)
      00029E 26 0A            [ 1]  535 	jrne	00130$
      0002A0 1E 0B            [ 2]  536 	ldw	x, (0x0b, sp)
      0002A2 A3 00 01         [ 2]  537 	cpw	x, #0x0001
      0002A5 26 03            [ 1]  538 	jrne	00130$
      0002A7 5F               [ 1]  539 	clrw	x
      0002A8 1F 0B            [ 2]  540 	ldw	(0x0b, sp), x
      0002AA                        541 00130$:
                                    542 ;	main.c: 99: if((b&(1<<14))!=0&&fl4==0)PD_ODR^=(1<<4),fl4=1;
      0002AA 0F 42            [ 1]  543 	clr	(0x42, sp)
      0002AC 7B 03            [ 1]  544 	ld	a, (0x03, sp)
      0002AE A4 40            [ 1]  545 	and	a, #0x40
      0002B0 6B 41            [ 1]  546 	ld	(0x41, sp), a
      0002B2 5F               [ 1]  547 	clrw	x
      0002B3 1F 3F            [ 2]  548 	ldw	(0x3f, sp), x
      0002B5 1E 41            [ 2]  549 	ldw	x, (0x41, sp)
      0002B7 26 04            [ 1]  550 	jrne	00347$
      0002B9 1E 3F            [ 2]  551 	ldw	x, (0x3f, sp)
      0002BB 27 12            [ 1]  552 	jreq	00136$
      0002BD                        553 00347$:
      0002BD 1E 1F            [ 2]  554 	ldw	x, (0x1f, sp)
      0002BF 26 0E            [ 1]  555 	jrne	00136$
      0002C1 AE 50 0F         [ 2]  556 	ldw	x, #0x500f
      0002C4 F6               [ 1]  557 	ld	a, (x)
      0002C5 A8 10            [ 1]  558 	xor	a, #0x10
      0002C7 F7               [ 1]  559 	ld	(x), a
      0002C8 AE 00 01         [ 2]  560 	ldw	x, #0x0001
      0002CB 1F 1F            [ 2]  561 	ldw	(0x1f, sp), x
      0002CD 20 12            [ 2]  562 	jra	00137$
      0002CF                        563 00136$:
                                    564 ;	main.c: 100: else if((b&(1<<14))==0&&fl4==1)fl4=0;
      0002CF 1E 41            [ 2]  565 	ldw	x, (0x41, sp)
      0002D1 26 0E            [ 1]  566 	jrne	00137$
      0002D3 1E 3F            [ 2]  567 	ldw	x, (0x3f, sp)
      0002D5 26 0A            [ 1]  568 	jrne	00137$
      0002D7 1E 1F            [ 2]  569 	ldw	x, (0x1f, sp)
      0002D9 A3 00 01         [ 2]  570 	cpw	x, #0x0001
      0002DC 26 03            [ 1]  571 	jrne	00137$
      0002DE 5F               [ 1]  572 	clrw	x
      0002DF 1F 1F            [ 2]  573 	ldw	(0x1f, sp), x
      0002E1                        574 00137$:
                                    575 ;	main.c: 102: if((b&(1<<13))!=0&&fl5==0)PD_ODR^=(1<<5),fl5=1;
      0002E1 0F 36            [ 1]  576 	clr	(0x36, sp)
      0002E3 7B 03            [ 1]  577 	ld	a, (0x03, sp)
      0002E5 A4 20            [ 1]  578 	and	a, #0x20
      0002E7 6B 35            [ 1]  579 	ld	(0x35, sp), a
      0002E9 5F               [ 1]  580 	clrw	x
      0002EA 1F 33            [ 2]  581 	ldw	(0x33, sp), x
      0002EC 1E 35            [ 2]  582 	ldw	x, (0x35, sp)
      0002EE 26 04            [ 1]  583 	jrne	00354$
      0002F0 1E 33            [ 2]  584 	ldw	x, (0x33, sp)
      0002F2 27 0F            [ 1]  585 	jreq	00143$
      0002F4                        586 00354$:
      0002F4 1E 1D            [ 2]  587 	ldw	x, (0x1d, sp)
      0002F6 26 0B            [ 1]  588 	jrne	00143$
      0002F8 90 1A 50 0F      [ 1]  589 	bcpl	0x500f, #5
      0002FC AE 00 01         [ 2]  590 	ldw	x, #0x0001
      0002FF 1F 1D            [ 2]  591 	ldw	(0x1d, sp), x
      000301 20 12            [ 2]  592 	jra	00144$
      000303                        593 00143$:
                                    594 ;	main.c: 103: else if((b&(1<<13))==0&&fl5==1)fl5=0;
      000303 1E 35            [ 2]  595 	ldw	x, (0x35, sp)
      000305 26 0E            [ 1]  596 	jrne	00144$
      000307 1E 33            [ 2]  597 	ldw	x, (0x33, sp)
      000309 26 0A            [ 1]  598 	jrne	00144$
      00030B 1E 1D            [ 2]  599 	ldw	x, (0x1d, sp)
      00030D A3 00 01         [ 2]  600 	cpw	x, #0x0001
      000310 26 03            [ 1]  601 	jrne	00144$
      000312 5F               [ 1]  602 	clrw	x
      000313 1F 1D            [ 2]  603 	ldw	(0x1d, sp), x
      000315                        604 00144$:
                                    605 ;	main.c: 105: if((b&(1<<12))!=0&&fl6==0)PD_ODR^=(1<<6),fl6=1;
      000315 0F 3A            [ 1]  606 	clr	(0x3a, sp)
      000317 7B 03            [ 1]  607 	ld	a, (0x03, sp)
      000319 A4 10            [ 1]  608 	and	a, #0x10
      00031B 6B 39            [ 1]  609 	ld	(0x39, sp), a
      00031D 5F               [ 1]  610 	clrw	x
      00031E 1F 37            [ 2]  611 	ldw	(0x37, sp), x
      000320 1E 39            [ 2]  612 	ldw	x, (0x39, sp)
      000322 26 04            [ 1]  613 	jrne	00361$
      000324 1E 37            [ 2]  614 	ldw	x, (0x37, sp)
      000326 27 12            [ 1]  615 	jreq	00150$
      000328                        616 00361$:
      000328 1E 1B            [ 2]  617 	ldw	x, (0x1b, sp)
      00032A 26 0E            [ 1]  618 	jrne	00150$
      00032C AE 50 0F         [ 2]  619 	ldw	x, #0x500f
      00032F F6               [ 1]  620 	ld	a, (x)
      000330 A8 40            [ 1]  621 	xor	a, #0x40
      000332 F7               [ 1]  622 	ld	(x), a
      000333 AE 00 01         [ 2]  623 	ldw	x, #0x0001
      000336 1F 1B            [ 2]  624 	ldw	(0x1b, sp), x
      000338 20 12            [ 2]  625 	jra	00151$
      00033A                        626 00150$:
                                    627 ;	main.c: 106: else if((b&(1<<12))==0&&fl6==1)fl6=0;
      00033A 1E 39            [ 2]  628 	ldw	x, (0x39, sp)
      00033C 26 0E            [ 1]  629 	jrne	00151$
      00033E 1E 37            [ 2]  630 	ldw	x, (0x37, sp)
      000340 26 0A            [ 1]  631 	jrne	00151$
      000342 1E 1B            [ 2]  632 	ldw	x, (0x1b, sp)
      000344 A3 00 01         [ 2]  633 	cpw	x, #0x0001
      000347 26 03            [ 1]  634 	jrne	00151$
      000349 5F               [ 1]  635 	clrw	x
      00034A 1F 1B            [ 2]  636 	ldw	(0x1b, sp), x
      00034C                        637 00151$:
                                    638 ;	main.c: 108: if((b&(1<<11))!=0&&fl7==0)PD_ODR^=(1<<7),fl7=1;
      00034C 0F 3E            [ 1]  639 	clr	(0x3e, sp)
      00034E 7B 03            [ 1]  640 	ld	a, (0x03, sp)
      000350 A4 08            [ 1]  641 	and	a, #0x08
      000352 6B 3D            [ 1]  642 	ld	(0x3d, sp), a
      000354 5F               [ 1]  643 	clrw	x
      000355 16 3D            [ 2]  644 	ldw	y, (0x3d, sp)
      000357 26 03            [ 1]  645 	jrne	00368$
      000359 5D               [ 2]  646 	tnzw	x
      00035A 27 12            [ 1]  647 	jreq	00157$
      00035C                        648 00368$:
      00035C 16 19            [ 2]  649 	ldw	y, (0x19, sp)
      00035E 26 0E            [ 1]  650 	jrne	00157$
      000360 AE 50 0F         [ 2]  651 	ldw	x, #0x500f
      000363 F6               [ 1]  652 	ld	a, (x)
      000364 A8 80            [ 1]  653 	xor	a, #0x80
      000366 F7               [ 1]  654 	ld	(x), a
      000367 AE 00 01         [ 2]  655 	ldw	x, #0x0001
      00036A 1F 19            [ 2]  656 	ldw	(0x19, sp), x
      00036C 20 11            [ 2]  657 	jra	00158$
      00036E                        658 00157$:
                                    659 ;	main.c: 109: else if((b&(1<<11))==0&&fl7==1)fl7=0;
      00036E 16 3D            [ 2]  660 	ldw	y, (0x3d, sp)
      000370 26 0D            [ 1]  661 	jrne	00158$
      000372 5D               [ 2]  662 	tnzw	x
      000373 26 0A            [ 1]  663 	jrne	00158$
      000375 1E 19            [ 2]  664 	ldw	x, (0x19, sp)
      000377 A3 00 01         [ 2]  665 	cpw	x, #0x0001
      00037A 26 03            [ 1]  666 	jrne	00158$
      00037C 5F               [ 1]  667 	clrw	x
      00037D 1F 19            [ 2]  668 	ldw	(0x19, sp), x
      00037F                        669 00158$:
                                    670 ;	main.c: 111: if((b++)==65535)b=0;
      00037F 16 03            [ 2]  671 	ldw	y, (0x03, sp)
      000381 17 23            [ 2]  672 	ldw	(0x23, sp), y
      000383 16 01            [ 2]  673 	ldw	y, (0x01, sp)
      000385 1E 03            [ 2]  674 	ldw	x, (0x03, sp)
      000387 1C 00 01         [ 2]  675 	addw	x, #0x0001
      00038A 1F 45            [ 2]  676 	ldw	(0x45, sp), x
      00038C 7B 02            [ 1]  677 	ld	a, (0x02, sp)
      00038E A9 00            [ 1]  678 	adc	a, #0x00
      000390 97               [ 1]  679 	ld	xl, a
      000391 7B 01            [ 1]  680 	ld	a, (0x01, sp)
      000393 A9 00            [ 1]  681 	adc	a, #0x00
      000395 95               [ 1]  682 	ld	xh, a
      000396 1F 01            [ 2]  683 	ldw	(0x01, sp), x
      000398 1E 45            [ 2]  684 	ldw	x, (0x45, sp)
      00039A 1F 03            [ 2]  685 	ldw	(0x03, sp), x
      00039C 1E 23            [ 2]  686 	ldw	x, (0x23, sp)
      00039E A3 FF FF         [ 2]  687 	cpw	x, #0xffff
      0003A1 26 06            [ 1]  688 	jrne	00376$
      0003A3 90 A3 00 00      [ 2]  689 	cpw	y, #0x0000
      0003A7 27 03            [ 1]  690 	jreq	00377$
      0003A9                        691 00376$:
      0003A9 CCr01rBE         [ 2]  692 	jp	00163$
      0003AC                        693 00377$:
      0003AC 5F               [ 1]  694 	clrw	x
      0003AD 1F 03            [ 2]  695 	ldw	(0x03, sp), x
      0003AF 1F 01            [ 2]  696 	ldw	(0x01, sp), x
      0003B1 CCr01rBE         [ 2]  697 	jp	00163$
      0003B4 5B 46            [ 2]  698 	addw	sp, #70
      0003B6 81               [ 4]  699 	ret
                                    700 	.area CODE
                                    701 	.area INITIALIZER
                                    702 	.area CABS (ABS)
