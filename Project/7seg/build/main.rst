                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.5 #9426 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _delay
                                     13 	.globl _out7seg
                                     14 	.globl _GPIO_init
                                     15 	.globl _clk_init
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area DATA
                                     20 ;--------------------------------------------------------
                                     21 ; ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area INITIALIZED
                                     24 ;--------------------------------------------------------
                                     25 ; Stack segment in internal ram 
                                     26 ;--------------------------------------------------------
                                     27 	.area	SSEG
      000001                         28 __start__stack:
      000001                         29 	.ds	1
                                     30 
                                     31 ;--------------------------------------------------------
                                     32 ; absolute external ram data
                                     33 ;--------------------------------------------------------
                                     34 	.area DABS (ABS)
                                     35 ;--------------------------------------------------------
                                     36 ; interrupt vector 
                                     37 ;--------------------------------------------------------
                                     38 	.area HOME
      008000                         39 __interrupt_vect:
      008000 82 00 80 83             40 	int s_GSINIT ;reset
      008004 82 00 00 00             41 	int 0x0000 ;trap
      008008 82 00 00 00             42 	int 0x0000 ;int0
      00800C 82 00 00 00             43 	int 0x0000 ;int1
      008010 82 00 00 00             44 	int 0x0000 ;int2
      008014 82 00 00 00             45 	int 0x0000 ;int3
      008018 82 00 00 00             46 	int 0x0000 ;int4
      00801C 82 00 00 00             47 	int 0x0000 ;int5
      008020 82 00 00 00             48 	int 0x0000 ;int6
      008024 82 00 00 00             49 	int 0x0000 ;int7
      008028 82 00 00 00             50 	int 0x0000 ;int8
      00802C 82 00 00 00             51 	int 0x0000 ;int9
      008030 82 00 00 00             52 	int 0x0000 ;int10
      008034 82 00 00 00             53 	int 0x0000 ;int11
      008038 82 00 00 00             54 	int 0x0000 ;int12
      00803C 82 00 00 00             55 	int 0x0000 ;int13
      008040 82 00 00 00             56 	int 0x0000 ;int14
      008044 82 00 00 00             57 	int 0x0000 ;int15
      008048 82 00 00 00             58 	int 0x0000 ;int16
      00804C 82 00 00 00             59 	int 0x0000 ;int17
      008050 82 00 00 00             60 	int 0x0000 ;int18
      008054 82 00 00 00             61 	int 0x0000 ;int19
      008058 82 00 00 00             62 	int 0x0000 ;int20
      00805C 82 00 00 00             63 	int 0x0000 ;int21
      008060 82 00 00 00             64 	int 0x0000 ;int22
      008064 82 00 00 00             65 	int 0x0000 ;int23
      008068 82 00 00 00             66 	int 0x0000 ;int24
      00806C 82 00 00 00             67 	int 0x0000 ;int25
      008070 82 00 00 00             68 	int 0x0000 ;int26
      008074 82 00 00 00             69 	int 0x0000 ;int27
      008078 82 00 00 00             70 	int 0x0000 ;int28
      00807C 82 00 00 00             71 	int 0x0000 ;int29
                                     72 ;--------------------------------------------------------
                                     73 ; global & static initialisations
                                     74 ;--------------------------------------------------------
                                     75 	.area HOME
                                     76 	.area GSINIT
                                     77 	.area GSFINAL
                                     78 	.area GSINIT
      008083                         79 __sdcc_gs_init_startup:
      008083                         80 __sdcc_init_data:
                                     81 ; stm8_genXINIT() start
      008083 AE 00 00         [ 2]   82 	ldw x, #l_DATA
      008086 27 07            [ 1]   83 	jreq	00002$
      008088                         84 00001$:
      008088 72 4F 00 00      [ 1]   85 	clr (s_DATA - 1, x)
      00808C 5A               [ 2]   86 	decw x
      00808D 26 F9            [ 1]   87 	jrne	00001$
      00808F                         88 00002$:
      00808F AE 00 00         [ 2]   89 	ldw	x, #l_INITIALIZER
      008092 27 09            [ 1]   90 	jreq	00004$
      008094                         91 00003$:
      008094 D6 84 80         [ 1]   92 	ld	a, (s_INITIALIZER - 1, x)
      008097 D7 00 00         [ 1]   93 	ld	(s_INITIALIZED - 1, x), a
      00809A 5A               [ 2]   94 	decw	x
      00809B 26 F7            [ 1]   95 	jrne	00003$
      00809D                         96 00004$:
                                     97 ; stm8_genXINIT() end
                                     98 	.area GSFINAL
      00809D CC 80 80         [ 2]   99 	jp	__sdcc_program_startup
                                    100 ;--------------------------------------------------------
                                    101 ; Home
                                    102 ;--------------------------------------------------------
                                    103 	.area HOME
                                    104 	.area HOME
      008080                        105 __sdcc_program_startup:
      008080 CC 82 19         [ 2]  106 	jp	_main
                                    107 ;	return from main will return to caller
                                    108 ;--------------------------------------------------------
                                    109 ; code
                                    110 ;--------------------------------------------------------
                                    111 	.area CODE
                                    112 ;	inc/clk_init.h: 7: void clk_init(void){    
                                    113 ;	-----------------------------------------
                                    114 ;	 function clk_init
                                    115 ;	-----------------------------------------
      0080A0                        116 _clk_init:
                                    117 ;	inc/clk_init.h: 8: CLK_ECKR|=CLK_ECKR_HSEEN;            
      0080A0 72 10 50 C1      [ 1]  118 	bset	0x50c1, #0
                                    119 ;	inc/clk_init.h: 9: CLK_SWCR|=CLK_SWCR_SWEN;               
      0080A4 AE 50 C5         [ 2]  120 	ldw	x, #0x50c5
      0080A7 F6               [ 1]  121 	ld	a, (x)
      0080A8 AA 02            [ 1]  122 	or	a, #0x02
      0080AA F7               [ 1]  123 	ld	(x), a
                                    124 ;	inc/clk_init.h: 10: while((CLK_ECKR & CLK_ECKR_HSERDY) == 0) {} 
      0080AB                        125 00101$:
      0080AB AE 50 C1         [ 2]  126 	ldw	x, #0x50c1
      0080AE F6               [ 1]  127 	ld	a, (x)
      0080AF A5 02            [ 1]  128 	bcp	a, #0x02
      0080B1 27 F8            [ 1]  129 	jreq	00101$
                                    130 ;	inc/clk_init.h: 11: CLK_CKDIVR = 0;                    
      0080B3 35 00 50 C6      [ 1]  131 	mov	0x50c6+0, #0x00
                                    132 ;	inc/clk_init.h: 12: CLK_SWR = 0xB4;                    
      0080B7 35 B4 50 C4      [ 1]  133 	mov	0x50c4+0, #0xb4
                                    134 ;	inc/clk_init.h: 13: while ((CLK_SWCR & CLK_SWCR_SWIF) == 0){}
      0080BB                        135 00104$:
      0080BB AE 50 C5         [ 2]  136 	ldw	x, #0x50c5
      0080BE F6               [ 1]  137 	ld	a, (x)
      0080BF A5 08            [ 1]  138 	bcp	a, #0x08
      0080C1 27 F8            [ 1]  139 	jreq	00104$
                                    140 ;	inc/clk_init.h: 14: CLK_CSSR|=CLK_CSSR_CSSEN;
      0080C3 72 10 50 C8      [ 1]  141 	bset	0x50c8, #0
      0080C7 81               [ 4]  142 	ret
                                    143 ;	inc/gpio_init.h: 10: void GPIO_init(void)
                                    144 ;	-----------------------------------------
                                    145 ;	 function GPIO_init
                                    146 ;	-----------------------------------------
      0080C8                        147 _GPIO_init:
                                    148 ;	inc/gpio_init.h: 17: PB_DDR = 0x00;                                                        //_______0__________________0________________1_____________bez podtiyzhki,c prerbIvaniem 
      0080C8 35 00 50 07      [ 1]  149 	mov	0x5007+0, #0x00
                                    150 ;	inc/gpio_init.h: 18: PB_CR1 = 0xff;                                                       //_______0__________________1________________1_____________c podtiyzhki,c prerbIvanii
      0080CC 35 FF 50 08      [ 1]  151 	mov	0x5008+0, #0xff
                                    152 ;	inc/gpio_init.h: 19: PB_CR2 = 0xff;                                                      //_______PORT_OUT
      0080D0 35 FF 50 09      [ 1]  153 	mov	0x5009+0, #0xff
                                    154 ;	inc/gpio_init.h: 21: PC_DDR = 0xff;                                                        //_______1__________________0________________0_____________otkritiy stok
      0080D4 35 FF 50 0C      [ 1]  155 	mov	0x500c+0, #0xff
                                    156 ;	inc/gpio_init.h: 22: PC_CR1 = 0xFF;                                                       //_______1__________________1________________0_____________dvuhtakthiy vihod
      0080D8 35 FF 50 0D      [ 1]  157 	mov	0x500d+0, #0xff
                                    158 ;	inc/gpio_init.h: 23: PC_CR2 = 0x00;                                                      //_______1__________________X________________1_____________skorost' do 10MHz
      0080DC 35 00 50 0E      [ 1]  159 	mov	0x500e+0, #0x00
                                    160 ;	inc/gpio_init.h: 25: PD_DDR = 0xFF;   
      0080E0 35 FF 50 11      [ 1]  161 	mov	0x5011+0, #0xff
                                    162 ;	inc/gpio_init.h: 26: PD_CR1 = 0xFF;  
      0080E4 35 FF 50 12      [ 1]  163 	mov	0x5012+0, #0xff
                                    164 ;	inc/gpio_init.h: 27: PD_CR2 = 0x00; 
      0080E8 35 00 50 13      [ 1]  165 	mov	0x5013+0, #0x00
      0080EC 81               [ 4]  166 	ret
                                    167 ;	inc/7sig.h: 23: void out7seg(volatile int t,volatile int q)
                                    168 ;	-----------------------------------------
                                    169 ;	 function out7seg
                                    170 ;	-----------------------------------------
      0080ED                        171 _out7seg:
      0080ED 52 19            [ 2]  172 	sub	sp, #25
                                    173 ;	inc/7sig.h: 27: unsigned int x[10]={num0, num1, num2, num3, num4, num5, num6, num7, num8, num9};
      0080EF 96               [ 1]  174 	ldw	x, sp
      0080F0 5C               [ 2]  175 	incw	x
      0080F1 1F 18            [ 2]  176 	ldw	(0x18, sp), x
      0080F3 1E 18            [ 2]  177 	ldw	x, (0x18, sp)
      0080F5 90 AE 00 BE      [ 2]  178 	ldw	y, #0x00be
      0080F9 FF               [ 2]  179 	ldw	(x), y
      0080FA 1E 18            [ 2]  180 	ldw	x, (0x18, sp)
      0080FC 5C               [ 2]  181 	incw	x
      0080FD 5C               [ 2]  182 	incw	x
      0080FE 90 AE 00 0C      [ 2]  183 	ldw	y, #0x000c
      008102 FF               [ 2]  184 	ldw	(x), y
      008103 1E 18            [ 2]  185 	ldw	x, (0x18, sp)
      008105 90 AE 00 76      [ 2]  186 	ldw	y, #0x0076
      008109 EF 04            [ 2]  187 	ldw	(0x0004, x), y
      00810B 1E 18            [ 2]  188 	ldw	x, (0x18, sp)
      00810D 90 AE 00 6E      [ 2]  189 	ldw	y, #0x006e
      008111 EF 06            [ 2]  190 	ldw	(0x0006, x), y
      008113 1E 18            [ 2]  191 	ldw	x, (0x18, sp)
      008115 90 AE 00 CC      [ 2]  192 	ldw	y, #0x00cc
      008119 EF 08            [ 2]  193 	ldw	(0x0008, x), y
      00811B 1E 18            [ 2]  194 	ldw	x, (0x18, sp)
      00811D 90 AE 00 EA      [ 2]  195 	ldw	y, #0x00ea
      008121 EF 0A            [ 2]  196 	ldw	(0x000a, x), y
      008123 1E 18            [ 2]  197 	ldw	x, (0x18, sp)
      008125 90 AE 00 FA      [ 2]  198 	ldw	y, #0x00fa
      008129 EF 0C            [ 2]  199 	ldw	(0x000c, x), y
      00812B 1E 18            [ 2]  200 	ldw	x, (0x18, sp)
      00812D 90 AE 00 0E      [ 2]  201 	ldw	y, #0x000e
      008131 EF 0E            [ 2]  202 	ldw	(0x000e, x), y
      008133 1E 18            [ 2]  203 	ldw	x, (0x18, sp)
      008135 90 AE 00 FE      [ 2]  204 	ldw	y, #0x00fe
      008139 EF 10            [ 2]  205 	ldw	(0x0010, x), y
      00813B 1E 18            [ 2]  206 	ldw	x, (0x18, sp)
      00813D 90 AE 00 EE      [ 2]  207 	ldw	y, #0x00ee
      008141 EF 12            [ 2]  208 	ldw	(0x0012, x), y
                                    209 ;	inc/7sig.h: 33: SEGPORT=0xff;
      008143 35 FF 50 0A      [ 1]  210 	mov	0x500a+0, #0xff
                                    211 ;	inc/7sig.h: 34: NSEGPORT|=(1<<3)|(1<<1)|(1<<2);
      008147 AE 50 0F         [ 2]  212 	ldw	x, #0x500f
      00814A F6               [ 1]  213 	ld	a, (x)
      00814B AA 0E            [ 1]  214 	or	a, #0x0e
      00814D F7               [ 1]  215 	ld	(x), a
                                    216 ;	inc/7sig.h: 35: nseg(q);
      00814E 1E 1E            [ 2]  217 	ldw	x, (0x1e, sp)
      008150 26 07            [ 1]  218 	jrne	00102$
      008152 AE 50 0F         [ 2]  219 	ldw	x, #0x500f
      008155 F6               [ 1]  220 	ld	a, (x)
      008156 A4 F7            [ 1]  221 	and	a, #0xf7
      008158 F7               [ 1]  222 	ld	(x), a
      008159                        223 00102$:
      008159 1E 1E            [ 2]  224 	ldw	x, (0x1e, sp)
      00815B A3 00 01         [ 2]  225 	cpw	x, #0x0001
      00815E 26 07            [ 1]  226 	jrne	00104$
      008160 AE 50 0F         [ 2]  227 	ldw	x, #0x500f
      008163 F6               [ 1]  228 	ld	a, (x)
      008164 A4 FD            [ 1]  229 	and	a, #0xfd
      008166 F7               [ 1]  230 	ld	(x), a
      008167                        231 00104$:
      008167 1E 1E            [ 2]  232 	ldw	x, (0x1e, sp)
      008169 A3 00 02         [ 2]  233 	cpw	x, #0x0002
      00816C 26 07            [ 1]  234 	jrne	00106$
      00816E AE 50 0F         [ 2]  235 	ldw	x, #0x500f
      008171 F6               [ 1]  236 	ld	a, (x)
      008172 A4 FB            [ 1]  237 	and	a, #0xfb
      008174 F7               [ 1]  238 	ld	(x), a
      008175                        239 00106$:
                                    240 ;	inc/7sig.h: 36: if(q==0) SEGPORT&=~(x[t%1000/100]);
      008175 1E 1E            [ 2]  241 	ldw	x, (0x1e, sp)
      008177 26 29            [ 1]  242 	jrne	00108$
      008179 AE 50 0A         [ 2]  243 	ldw	x, #0x500a
      00817C F6               [ 1]  244 	ld	a, (x)
      00817D 6B 17            [ 1]  245 	ld	(0x17, sp), a
      00817F 4B E8            [ 1]  246 	push	#0xe8
      008181 4B 03            [ 1]  247 	push	#0x03
      008183 1E 1E            [ 2]  248 	ldw	x, (0x1e, sp)
      008185 89               [ 2]  249 	pushw	x
      008186 CD 84 57         [ 4]  250 	call	__modsint
      008189 5B 04            [ 2]  251 	addw	sp, #4
      00818B 4B 64            [ 1]  252 	push	#0x64
      00818D 4B 00            [ 1]  253 	push	#0x00
      00818F 89               [ 2]  254 	pushw	x
      008190 CD 84 6D         [ 4]  255 	call	__divsint
      008193 5B 04            [ 2]  256 	addw	sp, #4
      008195 58               [ 2]  257 	sllw	x
      008196 72 FB 18         [ 2]  258 	addw	x, (0x18, sp)
      008199 FE               [ 2]  259 	ldw	x, (x)
      00819A 9F               [ 1]  260 	ld	a, xl
      00819B 43               [ 1]  261 	cpl	a
      00819C 14 17            [ 1]  262 	and	a, (0x17, sp)
      00819E AE 50 0A         [ 2]  263 	ldw	x, #0x500a
      0081A1 F7               [ 1]  264 	ld	(x), a
      0081A2                        265 00108$:
                                    266 ;	inc/7sig.h: 37: if(q==1) SEGPORT&=~(x[t%100/10]);
      0081A2 1E 1E            [ 2]  267 	ldw	x, (0x1e, sp)
      0081A4 A3 00 01         [ 2]  268 	cpw	x, #0x0001
      0081A7 26 29            [ 1]  269 	jrne	00110$
      0081A9 AE 50 0A         [ 2]  270 	ldw	x, #0x500a
      0081AC F6               [ 1]  271 	ld	a, (x)
      0081AD 6B 16            [ 1]  272 	ld	(0x16, sp), a
      0081AF 4B 64            [ 1]  273 	push	#0x64
      0081B1 4B 00            [ 1]  274 	push	#0x00
      0081B3 1E 1E            [ 2]  275 	ldw	x, (0x1e, sp)
      0081B5 89               [ 2]  276 	pushw	x
      0081B6 CD 84 57         [ 4]  277 	call	__modsint
      0081B9 5B 04            [ 2]  278 	addw	sp, #4
      0081BB 4B 0A            [ 1]  279 	push	#0x0a
      0081BD 4B 00            [ 1]  280 	push	#0x00
      0081BF 89               [ 2]  281 	pushw	x
      0081C0 CD 84 6D         [ 4]  282 	call	__divsint
      0081C3 5B 04            [ 2]  283 	addw	sp, #4
      0081C5 58               [ 2]  284 	sllw	x
      0081C6 72 FB 18         [ 2]  285 	addw	x, (0x18, sp)
      0081C9 FE               [ 2]  286 	ldw	x, (x)
      0081CA 9F               [ 1]  287 	ld	a, xl
      0081CB 43               [ 1]  288 	cpl	a
      0081CC 14 16            [ 1]  289 	and	a, (0x16, sp)
      0081CE AE 50 0A         [ 2]  290 	ldw	x, #0x500a
      0081D1 F7               [ 1]  291 	ld	(x), a
      0081D2                        292 00110$:
                                    293 ;	inc/7sig.h: 38: if(q==2) SEGPORT&=~(x[t%10]);
      0081D2 1E 1E            [ 2]  294 	ldw	x, (0x1e, sp)
      0081D4 A3 00 02         [ 2]  295 	cpw	x, #0x0002
      0081D7 26 1F            [ 1]  296 	jrne	00113$
      0081D9 AE 50 0A         [ 2]  297 	ldw	x, #0x500a
      0081DC F6               [ 1]  298 	ld	a, (x)
      0081DD 6B 15            [ 1]  299 	ld	(0x15, sp), a
      0081DF 4B 0A            [ 1]  300 	push	#0x0a
      0081E1 4B 00            [ 1]  301 	push	#0x00
      0081E3 1E 1E            [ 2]  302 	ldw	x, (0x1e, sp)
      0081E5 89               [ 2]  303 	pushw	x
      0081E6 CD 84 57         [ 4]  304 	call	__modsint
      0081E9 5B 04            [ 2]  305 	addw	sp, #4
      0081EB 58               [ 2]  306 	sllw	x
      0081EC 72 FB 18         [ 2]  307 	addw	x, (0x18, sp)
      0081EF FE               [ 2]  308 	ldw	x, (x)
      0081F0 9F               [ 1]  309 	ld	a, xl
      0081F1 43               [ 1]  310 	cpl	a
      0081F2 14 15            [ 1]  311 	and	a, (0x15, sp)
      0081F4 AE 50 0A         [ 2]  312 	ldw	x, #0x500a
      0081F7 F7               [ 1]  313 	ld	(x), a
      0081F8                        314 00113$:
      0081F8 5B 19            [ 2]  315 	addw	sp, #25
      0081FA 81               [ 4]  316 	ret
                                    317 ;	main.c: 46: void delay(int t)
                                    318 ;	-----------------------------------------
                                    319 ;	 function delay
                                    320 ;	-----------------------------------------
      0081FB                        321 _delay:
      0081FB 52 02            [ 2]  322 	sub	sp, #2
                                    323 ;	main.c: 49: for(i=0;i<t;i++)
      0081FD 90 5F            [ 1]  324 	clrw	y
      0081FF                        325 00107$:
      0081FF 51               [ 1]  326 	exgw	x, y
      008200 13 05            [ 2]  327 	cpw	x, (0x05, sp)
      008202 51               [ 1]  328 	exgw	x, y
      008203 2E 11            [ 1]  329 	jrsge	00109$
                                    330 ;	main.c: 51: for(s=0;s<1512;s++)
      008205 AE 05 E8         [ 2]  331 	ldw	x, #0x05e8
      008208 1F 01            [ 2]  332 	ldw	(0x01, sp), x
      00820A                        333 00105$:
      00820A 1E 01            [ 2]  334 	ldw	x, (0x01, sp)
      00820C 5A               [ 2]  335 	decw	x
      00820D 1F 01            [ 2]  336 	ldw	(0x01, sp), x
      00820F 5D               [ 2]  337 	tnzw	x
      008210 26 F8            [ 1]  338 	jrne	00105$
                                    339 ;	main.c: 49: for(i=0;i<t;i++)
      008212 90 5C            [ 2]  340 	incw	y
      008214 20 E9            [ 2]  341 	jra	00107$
      008216                        342 00109$:
      008216 5B 02            [ 2]  343 	addw	sp, #2
      008218 81               [ 4]  344 	ret
                                    345 ;	main.c: 59: void main(void)
                                    346 ;	-----------------------------------------
                                    347 ;	 function main
                                    348 ;	-----------------------------------------
      008219                        349 _main:
      008219 52 46            [ 2]  350 	sub	sp, #70
                                    351 ;	main.c: 61: int f=0,d=0,w=0,q=0,fl1=0,fl2=0,fl3=0,fl4=0,fl5=0,fl6=0,fl7=0;
      00821B 5F               [ 1]  352 	clrw	x
      00821C 1F 11            [ 2]  353 	ldw	(0x11, sp), x
      00821E 5F               [ 1]  354 	clrw	x
      00821F 1F 13            [ 2]  355 	ldw	(0x13, sp), x
      008221 5F               [ 1]  356 	clrw	x
      008222 1F 0F            [ 2]  357 	ldw	(0x0f, sp), x
      008224 5F               [ 1]  358 	clrw	x
      008225 1F 0D            [ 2]  359 	ldw	(0x0d, sp), x
      008227 5F               [ 1]  360 	clrw	x
      008228 1F 0B            [ 2]  361 	ldw	(0x0b, sp), x
      00822A 5F               [ 1]  362 	clrw	x
      00822B 1F 1F            [ 2]  363 	ldw	(0x1f, sp), x
      00822D 5F               [ 1]  364 	clrw	x
      00822E 1F 1D            [ 2]  365 	ldw	(0x1d, sp), x
      008230 5F               [ 1]  366 	clrw	x
      008231 1F 1B            [ 2]  367 	ldw	(0x1b, sp), x
      008233 5F               [ 1]  368 	clrw	x
      008234 1F 19            [ 2]  369 	ldw	(0x19, sp), x
                                    370 ;	main.c: 62: unsigned int os[3]={0,0,0};
      008236 96               [ 1]  371 	ldw	x, sp
      008237 1C 00 05         [ 2]  372 	addw	x, #5
      00823A 1F 25            [ 2]  373 	ldw	(0x25, sp), x
      00823C 1E 25            [ 2]  374 	ldw	x, (0x25, sp)
      00823E 6F 01            [ 1]  375 	clr	(0x1, x)
      008240 7F               [ 1]  376 	clr	(x)
      008241 1E 25            [ 2]  377 	ldw	x, (0x25, sp)
      008243 5C               [ 2]  378 	incw	x
      008244 5C               [ 2]  379 	incw	x
      008245 6F 01            [ 1]  380 	clr	(0x1, x)
      008247 7F               [ 1]  381 	clr	(x)
      008248 1E 25            [ 2]  382 	ldw	x, (0x25, sp)
      00824A 1C 00 04         [ 2]  383 	addw	x, #0x0004
      00824D 6F 01            [ 1]  384 	clr	(0x1, x)
      00824F 7F               [ 1]  385 	clr	(x)
                                    386 ;	main.c: 63: long b=0;
      008250 5F               [ 1]  387 	clrw	x
      008251 1F 03            [ 2]  388 	ldw	(0x03, sp), x
      008253 1F 01            [ 2]  389 	ldw	(0x01, sp), x
                                    390 ;	main.c: 64: clk_init();
      008255 CD 80 A0         [ 4]  391 	call	_clk_init
                                    392 ;	main.c: 66: GPIO_init();
      008258 CD 80 C8         [ 4]  393 	call	_GPIO_init
                                    394 ;	main.c: 70: d=0;
      00825B 5F               [ 1]  395 	clrw	x
      00825C 1F 17            [ 2]  396 	ldw	(0x17, sp), x
                                    397 ;	main.c: 73: while(1)
      00825E                        398 00163$:
                                    399 ;	main.c: 77: if((b&(1<<5))!=0&&fl1==0)
      00825E 7B 04            [ 1]  400 	ld	a, (0x04, sp)
      008260 A4 20            [ 1]  401 	and	a, #0x20
      008262 6B 2A            [ 1]  402 	ld	(0x2a, sp), a
      008264 5F               [ 1]  403 	clrw	x
      008265 1F 28            [ 2]  404 	ldw	(0x28, sp), x
      008267 0F 27            [ 1]  405 	clr	(0x27, sp)
      008269 1E 29            [ 2]  406 	ldw	x, (0x29, sp)
      00826B 26 04            [ 1]  407 	jrne	00315$
      00826D 1E 27            [ 2]  408 	ldw	x, (0x27, sp)
      00826F 27 47            [ 1]  409 	jreq	00113$
      008271                        410 00315$:
      008271 1E 0F            [ 2]  411 	ldw	x, (0x0f, sp)
      008273 26 43            [ 1]  412 	jrne	00113$
                                    413 ;	main.c: 79: w=(PB_IDR&((1<<0)|(1<<1)));
      008275 AE 50 06         [ 2]  414 	ldw	x, #0x5006
      008278 F6               [ 1]  415 	ld	a, (x)
      008279 A4 03            [ 1]  416 	and	a, #0x03
      00827B 5F               [ 1]  417 	clrw	x
      00827C 97               [ 1]  418 	ld	xl, a
      00827D 1F 15            [ 2]  419 	ldw	(0x15, sp), x
                                    420 ;	main.c: 80: if(w==0&&q==2&&f<998) f=f+1;
      00827F 1E 15            [ 2]  421 	ldw	x, (0x15, sp)
      008281 26 13            [ 1]  422 	jrne	00102$
      008283 1E 13            [ 2]  423 	ldw	x, (0x13, sp)
      008285 A3 00 02         [ 2]  424 	cpw	x, #0x0002
      008288 26 0C            [ 1]  425 	jrne	00102$
      00828A 1E 11            [ 2]  426 	ldw	x, (0x11, sp)
      00828C A3 03 E6         [ 2]  427 	cpw	x, #0x03e6
      00828F 2E 05            [ 1]  428 	jrsge	00102$
      008291 1E 11            [ 2]  429 	ldw	x, (0x11, sp)
      008293 5C               [ 2]  430 	incw	x
      008294 1F 11            [ 2]  431 	ldw	(0x11, sp), x
      008296                        432 00102$:
                                    433 ;	main.c: 81: if(w==0&&q==1&&f>0) f=f-1;
      008296 1E 15            [ 2]  434 	ldw	x, (0x15, sp)
      008298 26 13            [ 1]  435 	jrne	00106$
      00829A 1E 13            [ 2]  436 	ldw	x, (0x13, sp)
      00829C A3 00 01         [ 2]  437 	cpw	x, #0x0001
      00829F 26 0C            [ 1]  438 	jrne	00106$
      0082A1 1E 11            [ 2]  439 	ldw	x, (0x11, sp)
      0082A3 A3 00 00         [ 2]  440 	cpw	x, #0x0000
      0082A6 2D 05            [ 1]  441 	jrsle	00106$
      0082A8 1E 11            [ 2]  442 	ldw	x, (0x11, sp)
      0082AA 5A               [ 2]  443 	decw	x
      0082AB 1F 11            [ 2]  444 	ldw	(0x11, sp), x
      0082AD                        445 00106$:
                                    446 ;	main.c: 82: q=w;
      0082AD 16 15            [ 2]  447 	ldw	y, (0x15, sp)
      0082AF 17 13            [ 2]  448 	ldw	(0x13, sp), y
                                    449 ;	main.c: 84: fl1=1;
      0082B1 AE 00 01         [ 2]  450 	ldw	x, #0x0001
      0082B4 1F 0F            [ 2]  451 	ldw	(0x0f, sp), x
      0082B6 20 12            [ 2]  452 	jra	00114$
      0082B8                        453 00113$:
                                    454 ;	main.c: 86: else if((b&(1<<5))==0&&fl1==1)fl1=0;
      0082B8 1E 29            [ 2]  455 	ldw	x, (0x29, sp)
      0082BA 26 0E            [ 1]  456 	jrne	00114$
      0082BC 1E 27            [ 2]  457 	ldw	x, (0x27, sp)
      0082BE 26 0A            [ 1]  458 	jrne	00114$
      0082C0 1E 0F            [ 2]  459 	ldw	x, (0x0f, sp)
      0082C2 A3 00 01         [ 2]  460 	cpw	x, #0x0001
      0082C5 26 03            [ 1]  461 	jrne	00114$
      0082C7 5F               [ 1]  462 	clrw	x
      0082C8 1F 0F            [ 2]  463 	ldw	(0x0f, sp), x
      0082CA                        464 00114$:
                                    465 ;	main.c: 88: if((b&(1<<6))!=0&&fl2==0)
      0082CA 7B 04            [ 1]  466 	ld	a, (0x04, sp)
      0082CC A4 40            [ 1]  467 	and	a, #0x40
      0082CE 6B 32            [ 1]  468 	ld	(0x32, sp), a
      0082D0 5F               [ 1]  469 	clrw	x
      0082D1 1F 30            [ 2]  470 	ldw	(0x30, sp), x
      0082D3 0F 2F            [ 1]  471 	clr	(0x2f, sp)
      0082D5 1E 31            [ 2]  472 	ldw	x, (0x31, sp)
      0082D7 26 04            [ 1]  473 	jrne	00332$
      0082D9 1E 2F            [ 2]  474 	ldw	x, (0x2f, sp)
      0082DB 27 26            [ 1]  475 	jreq	00122$
      0082DD                        476 00332$:
      0082DD 1E 0D            [ 2]  477 	ldw	x, (0x0d, sp)
      0082DF 26 22            [ 1]  478 	jrne	00122$
                                    479 ;	main.c: 90: out7seg(f,d);
      0082E1 1E 17            [ 2]  480 	ldw	x, (0x17, sp)
      0082E3 89               [ 2]  481 	pushw	x
      0082E4 1E 13            [ 2]  482 	ldw	x, (0x13, sp)
      0082E6 89               [ 2]  483 	pushw	x
      0082E7 CD 80 ED         [ 4]  484 	call	_out7seg
      0082EA 5B 04            [ 2]  485 	addw	sp, #4
                                    486 ;	main.c: 91: if((d++)>2)d=0;
      0082EC 16 17            [ 2]  487 	ldw	y, (0x17, sp)
      0082EE 1E 17            [ 2]  488 	ldw	x, (0x17, sp)
      0082F0 5C               [ 2]  489 	incw	x
      0082F1 1F 17            [ 2]  490 	ldw	(0x17, sp), x
      0082F3 90 A3 00 02      [ 2]  491 	cpw	y, #0x0002
      0082F7 2D 03            [ 1]  492 	jrsle	00117$
      0082F9 5F               [ 1]  493 	clrw	x
      0082FA 1F 17            [ 2]  494 	ldw	(0x17, sp), x
      0082FC                        495 00117$:
                                    496 ;	main.c: 92: fl2=1;
      0082FC AE 00 01         [ 2]  497 	ldw	x, #0x0001
      0082FF 1F 0D            [ 2]  498 	ldw	(0x0d, sp), x
      008301 20 12            [ 2]  499 	jra	00123$
      008303                        500 00122$:
                                    501 ;	main.c: 94: else if((b&(1<<6))==0&&fl2==1)fl2=0;
      008303 1E 31            [ 2]  502 	ldw	x, (0x31, sp)
      008305 26 0E            [ 1]  503 	jrne	00123$
      008307 1E 2F            [ 2]  504 	ldw	x, (0x2f, sp)
      008309 26 0A            [ 1]  505 	jrne	00123$
      00830B 1E 0D            [ 2]  506 	ldw	x, (0x0d, sp)
      00830D A3 00 01         [ 2]  507 	cpw	x, #0x0001
      008310 26 03            [ 1]  508 	jrne	00123$
      008312 5F               [ 1]  509 	clrw	x
      008313 1F 0D            [ 2]  510 	ldw	(0x0d, sp), x
      008315                        511 00123$:
                                    512 ;	main.c: 96: if((b&((1<<13)|(1<<14)|(1<<15)))!=0&&fl3==0)PD_ODR^=(1<<0),fl3=1;
      008315 0F 2E            [ 1]  513 	clr	(0x2e, sp)
      008317 7B 03            [ 1]  514 	ld	a, (0x03, sp)
      008319 A4 E0            [ 1]  515 	and	a, #0xe0
      00831B 6B 2D            [ 1]  516 	ld	(0x2d, sp), a
      00831D 16 01            [ 2]  517 	ldw	y, (0x01, sp)
      00831F 17 2B            [ 2]  518 	ldw	(0x2b, sp), y
      008321 1E 2D            [ 2]  519 	ldw	x, (0x2d, sp)
      008323 26 04            [ 1]  520 	jrne	00340$
      008325 1E 2B            [ 2]  521 	ldw	x, (0x2b, sp)
      008327 27 0F            [ 1]  522 	jreq	00129$
      008329                        523 00340$:
      008329 1E 0B            [ 2]  524 	ldw	x, (0x0b, sp)
      00832B 26 0B            [ 1]  525 	jrne	00129$
      00832D 90 10 50 0F      [ 1]  526 	bcpl	0x500f, #0
      008331 AE 00 01         [ 2]  527 	ldw	x, #0x0001
      008334 1F 0B            [ 2]  528 	ldw	(0x0b, sp), x
      008336 20 12            [ 2]  529 	jra	00130$
      008338                        530 00129$:
                                    531 ;	main.c: 97: else if((b&((1<<13)|(1<<14)|(1<<15)))==0&&fl3==1)fl3=0;
      008338 1E 2D            [ 2]  532 	ldw	x, (0x2d, sp)
      00833A 26 0E            [ 1]  533 	jrne	00130$
      00833C 1E 2B            [ 2]  534 	ldw	x, (0x2b, sp)
      00833E 26 0A            [ 1]  535 	jrne	00130$
      008340 1E 0B            [ 2]  536 	ldw	x, (0x0b, sp)
      008342 A3 00 01         [ 2]  537 	cpw	x, #0x0001
      008345 26 03            [ 1]  538 	jrne	00130$
      008347 5F               [ 1]  539 	clrw	x
      008348 1F 0B            [ 2]  540 	ldw	(0x0b, sp), x
      00834A                        541 00130$:
                                    542 ;	main.c: 99: if((b&(1<<14))!=0&&fl4==0)PD_ODR^=(1<<4),fl4=1;
      00834A 0F 42            [ 1]  543 	clr	(0x42, sp)
      00834C 7B 03            [ 1]  544 	ld	a, (0x03, sp)
      00834E A4 40            [ 1]  545 	and	a, #0x40
      008350 6B 41            [ 1]  546 	ld	(0x41, sp), a
      008352 5F               [ 1]  547 	clrw	x
      008353 1F 3F            [ 2]  548 	ldw	(0x3f, sp), x
      008355 1E 41            [ 2]  549 	ldw	x, (0x41, sp)
      008357 26 04            [ 1]  550 	jrne	00347$
      008359 1E 3F            [ 2]  551 	ldw	x, (0x3f, sp)
      00835B 27 12            [ 1]  552 	jreq	00136$
      00835D                        553 00347$:
      00835D 1E 1F            [ 2]  554 	ldw	x, (0x1f, sp)
      00835F 26 0E            [ 1]  555 	jrne	00136$
      008361 AE 50 0F         [ 2]  556 	ldw	x, #0x500f
      008364 F6               [ 1]  557 	ld	a, (x)
      008365 A8 10            [ 1]  558 	xor	a, #0x10
      008367 F7               [ 1]  559 	ld	(x), a
      008368 AE 00 01         [ 2]  560 	ldw	x, #0x0001
      00836B 1F 1F            [ 2]  561 	ldw	(0x1f, sp), x
      00836D 20 12            [ 2]  562 	jra	00137$
      00836F                        563 00136$:
                                    564 ;	main.c: 100: else if((b&(1<<14))==0&&fl4==1)fl4=0;
      00836F 1E 41            [ 2]  565 	ldw	x, (0x41, sp)
      008371 26 0E            [ 1]  566 	jrne	00137$
      008373 1E 3F            [ 2]  567 	ldw	x, (0x3f, sp)
      008375 26 0A            [ 1]  568 	jrne	00137$
      008377 1E 1F            [ 2]  569 	ldw	x, (0x1f, sp)
      008379 A3 00 01         [ 2]  570 	cpw	x, #0x0001
      00837C 26 03            [ 1]  571 	jrne	00137$
      00837E 5F               [ 1]  572 	clrw	x
      00837F 1F 1F            [ 2]  573 	ldw	(0x1f, sp), x
      008381                        574 00137$:
                                    575 ;	main.c: 102: if((b&(1<<13))!=0&&fl5==0)PD_ODR^=(1<<5),fl5=1;
      008381 0F 36            [ 1]  576 	clr	(0x36, sp)
      008383 7B 03            [ 1]  577 	ld	a, (0x03, sp)
      008385 A4 20            [ 1]  578 	and	a, #0x20
      008387 6B 35            [ 1]  579 	ld	(0x35, sp), a
      008389 5F               [ 1]  580 	clrw	x
      00838A 1F 33            [ 2]  581 	ldw	(0x33, sp), x
      00838C 1E 35            [ 2]  582 	ldw	x, (0x35, sp)
      00838E 26 04            [ 1]  583 	jrne	00354$
      008390 1E 33            [ 2]  584 	ldw	x, (0x33, sp)
      008392 27 0F            [ 1]  585 	jreq	00143$
      008394                        586 00354$:
      008394 1E 1D            [ 2]  587 	ldw	x, (0x1d, sp)
      008396 26 0B            [ 1]  588 	jrne	00143$
      008398 90 1A 50 0F      [ 1]  589 	bcpl	0x500f, #5
      00839C AE 00 01         [ 2]  590 	ldw	x, #0x0001
      00839F 1F 1D            [ 2]  591 	ldw	(0x1d, sp), x
      0083A1 20 12            [ 2]  592 	jra	00144$
      0083A3                        593 00143$:
                                    594 ;	main.c: 103: else if((b&(1<<13))==0&&fl5==1)fl5=0;
      0083A3 1E 35            [ 2]  595 	ldw	x, (0x35, sp)
      0083A5 26 0E            [ 1]  596 	jrne	00144$
      0083A7 1E 33            [ 2]  597 	ldw	x, (0x33, sp)
      0083A9 26 0A            [ 1]  598 	jrne	00144$
      0083AB 1E 1D            [ 2]  599 	ldw	x, (0x1d, sp)
      0083AD A3 00 01         [ 2]  600 	cpw	x, #0x0001
      0083B0 26 03            [ 1]  601 	jrne	00144$
      0083B2 5F               [ 1]  602 	clrw	x
      0083B3 1F 1D            [ 2]  603 	ldw	(0x1d, sp), x
      0083B5                        604 00144$:
                                    605 ;	main.c: 105: if((b&(1<<12))!=0&&fl6==0)PD_ODR^=(1<<6),fl6=1;
      0083B5 0F 3A            [ 1]  606 	clr	(0x3a, sp)
      0083B7 7B 03            [ 1]  607 	ld	a, (0x03, sp)
      0083B9 A4 10            [ 1]  608 	and	a, #0x10
      0083BB 6B 39            [ 1]  609 	ld	(0x39, sp), a
      0083BD 5F               [ 1]  610 	clrw	x
      0083BE 1F 37            [ 2]  611 	ldw	(0x37, sp), x
      0083C0 1E 39            [ 2]  612 	ldw	x, (0x39, sp)
      0083C2 26 04            [ 1]  613 	jrne	00361$
      0083C4 1E 37            [ 2]  614 	ldw	x, (0x37, sp)
      0083C6 27 12            [ 1]  615 	jreq	00150$
      0083C8                        616 00361$:
      0083C8 1E 1B            [ 2]  617 	ldw	x, (0x1b, sp)
      0083CA 26 0E            [ 1]  618 	jrne	00150$
      0083CC AE 50 0F         [ 2]  619 	ldw	x, #0x500f
      0083CF F6               [ 1]  620 	ld	a, (x)
      0083D0 A8 40            [ 1]  621 	xor	a, #0x40
      0083D2 F7               [ 1]  622 	ld	(x), a
      0083D3 AE 00 01         [ 2]  623 	ldw	x, #0x0001
      0083D6 1F 1B            [ 2]  624 	ldw	(0x1b, sp), x
      0083D8 20 12            [ 2]  625 	jra	00151$
      0083DA                        626 00150$:
                                    627 ;	main.c: 106: else if((b&(1<<12))==0&&fl6==1)fl6=0;
      0083DA 1E 39            [ 2]  628 	ldw	x, (0x39, sp)
      0083DC 26 0E            [ 1]  629 	jrne	00151$
      0083DE 1E 37            [ 2]  630 	ldw	x, (0x37, sp)
      0083E0 26 0A            [ 1]  631 	jrne	00151$
      0083E2 1E 1B            [ 2]  632 	ldw	x, (0x1b, sp)
      0083E4 A3 00 01         [ 2]  633 	cpw	x, #0x0001
      0083E7 26 03            [ 1]  634 	jrne	00151$
      0083E9 5F               [ 1]  635 	clrw	x
      0083EA 1F 1B            [ 2]  636 	ldw	(0x1b, sp), x
      0083EC                        637 00151$:
                                    638 ;	main.c: 108: if((b&(1<<11))!=0&&fl7==0)PD_ODR^=(1<<7),fl7=1;
      0083EC 0F 3E            [ 1]  639 	clr	(0x3e, sp)
      0083EE 7B 03            [ 1]  640 	ld	a, (0x03, sp)
      0083F0 A4 08            [ 1]  641 	and	a, #0x08
      0083F2 6B 3D            [ 1]  642 	ld	(0x3d, sp), a
      0083F4 5F               [ 1]  643 	clrw	x
      0083F5 16 3D            [ 2]  644 	ldw	y, (0x3d, sp)
      0083F7 26 03            [ 1]  645 	jrne	00368$
      0083F9 5D               [ 2]  646 	tnzw	x
      0083FA 27 12            [ 1]  647 	jreq	00157$
      0083FC                        648 00368$:
      0083FC 16 19            [ 2]  649 	ldw	y, (0x19, sp)
      0083FE 26 0E            [ 1]  650 	jrne	00157$
      008400 AE 50 0F         [ 2]  651 	ldw	x, #0x500f
      008403 F6               [ 1]  652 	ld	a, (x)
      008404 A8 80            [ 1]  653 	xor	a, #0x80
      008406 F7               [ 1]  654 	ld	(x), a
      008407 AE 00 01         [ 2]  655 	ldw	x, #0x0001
      00840A 1F 19            [ 2]  656 	ldw	(0x19, sp), x
      00840C 20 11            [ 2]  657 	jra	00158$
      00840E                        658 00157$:
                                    659 ;	main.c: 109: else if((b&(1<<11))==0&&fl7==1)fl7=0;
      00840E 16 3D            [ 2]  660 	ldw	y, (0x3d, sp)
      008410 26 0D            [ 1]  661 	jrne	00158$
      008412 5D               [ 2]  662 	tnzw	x
      008413 26 0A            [ 1]  663 	jrne	00158$
      008415 1E 19            [ 2]  664 	ldw	x, (0x19, sp)
      008417 A3 00 01         [ 2]  665 	cpw	x, #0x0001
      00841A 26 03            [ 1]  666 	jrne	00158$
      00841C 5F               [ 1]  667 	clrw	x
      00841D 1F 19            [ 2]  668 	ldw	(0x19, sp), x
      00841F                        669 00158$:
                                    670 ;	main.c: 111: if((b++)==65535)b=0;
      00841F 16 03            [ 2]  671 	ldw	y, (0x03, sp)
      008421 17 23            [ 2]  672 	ldw	(0x23, sp), y
      008423 16 01            [ 2]  673 	ldw	y, (0x01, sp)
      008425 1E 03            [ 2]  674 	ldw	x, (0x03, sp)
      008427 1C 00 01         [ 2]  675 	addw	x, #0x0001
      00842A 1F 45            [ 2]  676 	ldw	(0x45, sp), x
      00842C 7B 02            [ 1]  677 	ld	a, (0x02, sp)
      00842E A9 00            [ 1]  678 	adc	a, #0x00
      008430 97               [ 1]  679 	ld	xl, a
      008431 7B 01            [ 1]  680 	ld	a, (0x01, sp)
      008433 A9 00            [ 1]  681 	adc	a, #0x00
      008435 95               [ 1]  682 	ld	xh, a
      008436 1F 01            [ 2]  683 	ldw	(0x01, sp), x
      008438 1E 45            [ 2]  684 	ldw	x, (0x45, sp)
      00843A 1F 03            [ 2]  685 	ldw	(0x03, sp), x
      00843C 1E 23            [ 2]  686 	ldw	x, (0x23, sp)
      00843E A3 FF FF         [ 2]  687 	cpw	x, #0xffff
      008441 26 06            [ 1]  688 	jrne	00376$
      008443 90 A3 00 00      [ 2]  689 	cpw	y, #0x0000
      008447 27 03            [ 1]  690 	jreq	00377$
      008449                        691 00376$:
      008449 CC 82 5E         [ 2]  692 	jp	00163$
      00844C                        693 00377$:
      00844C 5F               [ 1]  694 	clrw	x
      00844D 1F 03            [ 2]  695 	ldw	(0x03, sp), x
      00844F 1F 01            [ 2]  696 	ldw	(0x01, sp), x
      008451 CC 82 5E         [ 2]  697 	jp	00163$
      008454 5B 46            [ 2]  698 	addw	sp, #70
      008456 81               [ 4]  699 	ret
                                    700 	.area CODE
                                    701 	.area INITIALIZER
                                    702 	.area CABS (ABS)
